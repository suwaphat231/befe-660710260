basePath: /api/v1
definitions:
  main.Book:
    properties:
      author:
        type: string
      category:
        type: string
      cover_image:
        type: string
      created_at:
        type: string
      description:
        type: string
      discount:
        type: integer
      id:
        type: integer
      is_new:
        type: boolean
      isbn:
        type: string
      language:
        type: string
      original_price:
        type: number
      pages:
        type: integer
      price:
        type: number
      publisher:
        type: string
      rating:
        type: number
      reviews_count:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      year:
        type: integer
    type: object
  main.ErrorResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple example of using Gin with Swagger.
  title: Simple API Example
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Get all books or filter by year/category
      parameters:
      - description: Filter by year
        in: query
        name: year
        type: integer
      - description: Filter by category
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get all books
      tags:
      - Books
    post:
      consumes:
      - application/json
      description: Create a new book with all fields
      parameters:
      - description: Book object
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/main.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Create a new book
      tags:
      - Books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Delete a book
      tags:
      - Books
    get:
      consumes:
      - application/json
      - application/json
      description: |-
        Get details of specific book
        Get details of specific book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get book by ID
      tags:
      - Books
      - Books
    put:
      consumes:
      - application/json
      description: Update book details by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book object
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/main.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Update a book
      tags:
      - Books
  /books/discounted:
    get:
      consumes:
      - application/json
      description: Get books with discount greater than 0
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get discounted books
      tags:
      - Books
  /books/featured:
    get:
      consumes:
      - application/json
      description: Get books with high ratings (4.0+)
      parameters:
      - description: Number of books to return (default 10)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get featured books
      tags:
      - Books
  /books/new:
    get:
      consumes:
      - application/json
      description: Get latest books ordered by created date
      parameters:
      - description: Number of books to return (default 5)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get new books
      tags:
      - Books
  /books/search:
    get:
      consumes:
      - application/json
      description: Search books by title, author, or description
      parameters:
      - description: Search keyword
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Search books
      tags:
      - Books
  /categories:
    get:
      consumes:
      - application/json
      description: Get list of all book categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get all categories
      tags:
      - Books
swagger: "2.0"
